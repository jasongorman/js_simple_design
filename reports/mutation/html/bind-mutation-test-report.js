document.querySelector('mutation-test-report-app').report = {"files":{"C:\\Users\\jasongorman\\WebstormProjects\\refactoring\\src\\rover.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":6,"line":9},"start":{"column":30,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"1","location":{"end":{"column":37,"line":7},"start":{"column":25,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"2","location":{"end":{"column":6,"line":71},"start":{"column":22,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"3","location":{"end":{"column":10,"line":70},"start":{"column":72,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"5","location":{"end":{"column":35,"line":14},"start":{"column":17,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"4","location":{"end":{"column":35,"line":14},"start":{"column":17,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"7","location":{"end":{"column":35,"line":14},"start":{"column":32,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"6","location":{"end":{"column":35,"line":14},"start":{"column":17,"line":14}},"mutatorName":"EqualityOperator","replacement":"instruction != 'R'","status":"Killed"},{"id":"8","location":{"end":{"column":14,"line":25},"start":{"column":37,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"9","location":{"end":{"column":40,"line":15},"start":{"column":21,"line":15}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"10","location":{"end":{"column":40,"line":15},"start":{"column":21,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"11","location":{"end":{"column":40,"line":15},"start":{"column":21,"line":15}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'N'","status":"Killed"},{"id":"13","location":{"end":{"column":51,"line":16},"start":{"column":28,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"12","location":{"end":{"column":40,"line":15},"start":{"column":37,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"14","location":{"end":{"column":50,"line":16},"start":{"column":47,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"15","location":{"end":{"column":40,"line":18},"start":{"column":21,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"16","location":{"end":{"column":40,"line":18},"start":{"column":21,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"17","location":{"end":{"column":40,"line":18},"start":{"column":21,"line":18}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'E'","status":"Killed"},{"id":"19","location":{"end":{"column":51,"line":19},"start":{"column":28,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"18","location":{"end":{"column":40,"line":18},"start":{"column":37,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"20","location":{"end":{"column":50,"line":19},"start":{"column":47,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"21","location":{"end":{"column":40,"line":21},"start":{"column":21,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"22","location":{"end":{"column":40,"line":21},"start":{"column":21,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"23","location":{"end":{"column":40,"line":21},"start":{"column":21,"line":21}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'S'","status":"Killed"},{"id":"25","location":{"end":{"column":51,"line":22},"start":{"column":28,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"24","location":{"end":{"column":40,"line":21},"start":{"column":37,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"26","location":{"end":{"column":50,"line":22},"start":{"column":47,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"27","location":{"end":{"column":47,"line":24},"start":{"column":24,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"28","location":{"end":{"column":46,"line":24},"start":{"column":43,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"29","location":{"end":{"column":35,"line":28},"start":{"column":17,"line":28}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"30","location":{"end":{"column":35,"line":28},"start":{"column":17,"line":28}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"31","location":{"end":{"column":35,"line":28},"start":{"column":17,"line":28}},"mutatorName":"EqualityOperator","replacement":"instruction != 'L'","status":"Killed"},{"id":"32","location":{"end":{"column":35,"line":28},"start":{"column":32,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"33","location":{"end":{"column":14,"line":39},"start":{"column":37,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"34","location":{"end":{"column":40,"line":29},"start":{"column":21,"line":29}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"35","location":{"end":{"column":40,"line":29},"start":{"column":21,"line":29}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"36","location":{"end":{"column":40,"line":29},"start":{"column":21,"line":29}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'N'","status":"Killed"},{"id":"37","location":{"end":{"column":40,"line":29},"start":{"column":37,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"38","location":{"end":{"column":51,"line":30},"start":{"column":28,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"39","location":{"end":{"column":50,"line":30},"start":{"column":47,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"41","location":{"end":{"column":40,"line":32},"start":{"column":21,"line":32}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"40","location":{"end":{"column":40,"line":32},"start":{"column":21,"line":32}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"42","location":{"end":{"column":40,"line":32},"start":{"column":21,"line":32}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'W'","status":"Killed"},{"id":"43","location":{"end":{"column":40,"line":32},"start":{"column":37,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"44","location":{"end":{"column":51,"line":33},"start":{"column":28,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"45","location":{"end":{"column":50,"line":33},"start":{"column":47,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"46","location":{"end":{"column":40,"line":35},"start":{"column":21,"line":35}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"47","location":{"end":{"column":40,"line":35},"start":{"column":21,"line":35}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"49","location":{"end":{"column":40,"line":35},"start":{"column":37,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"48","location":{"end":{"column":40,"line":35},"start":{"column":21,"line":35}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'S'","status":"Killed"},{"id":"51","location":{"end":{"column":50,"line":36},"start":{"column":47,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"50","location":{"end":{"column":51,"line":36},"start":{"column":28,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"52","location":{"end":{"column":47,"line":38},"start":{"column":24,"line":38}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"53","location":{"end":{"column":46,"line":38},"start":{"column":43,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"54","location":{"end":{"column":35,"line":41},"start":{"column":17,"line":41}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"55","location":{"end":{"column":35,"line":41},"start":{"column":17,"line":41}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"56","location":{"end":{"column":35,"line":41},"start":{"column":17,"line":41}},"mutatorName":"EqualityOperator","replacement":"instruction != 'F'","status":"Killed"},{"id":"57","location":{"end":{"column":35,"line":41},"start":{"column":32,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"58","location":{"end":{"column":14,"line":52},"start":{"column":37,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"59","location":{"end":{"column":40,"line":42},"start":{"column":21,"line":42}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"60","location":{"end":{"column":40,"line":42},"start":{"column":21,"line":42}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"61","location":{"end":{"column":40,"line":42},"start":{"column":21,"line":42}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'N'","status":"Killed"},{"id":"62","location":{"end":{"column":40,"line":42},"start":{"column":37,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"63","location":{"end":{"column":94,"line":43},"start":{"column":28,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"64","location":{"end":{"column":93,"line":43},"start":{"column":49,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"65","location":{"end":{"column":92,"line":43},"start":{"column":72,"line":43}},"mutatorName":"ArithmeticOperator","replacement":"rover.position.y - 1","status":"Killed"},{"id":"66","location":{"end":{"column":40,"line":45},"start":{"column":21,"line":45}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"67","location":{"end":{"column":40,"line":45},"start":{"column":21,"line":45}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"68","location":{"end":{"column":40,"line":45},"start":{"column":21,"line":45}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'E'","status":"Killed"},{"id":"69","location":{"end":{"column":40,"line":45},"start":{"column":37,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"70","location":{"end":{"column":94,"line":46},"start":{"column":28,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"71","location":{"end":{"column":93,"line":46},"start":{"column":49,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"72","location":{"end":{"column":92,"line":46},"start":{"column":72,"line":46}},"mutatorName":"ArithmeticOperator","replacement":"rover.position.x - 1","status":"Killed"},{"id":"73","location":{"end":{"column":40,"line":48},"start":{"column":21,"line":48}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"74","location":{"end":{"column":40,"line":48},"start":{"column":21,"line":48}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"75","location":{"end":{"column":40,"line":48},"start":{"column":21,"line":48}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'S'","status":"Killed"},{"id":"76","location":{"end":{"column":40,"line":48},"start":{"column":37,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"77","location":{"end":{"column":94,"line":49},"start":{"column":28,"line":49}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"78","location":{"end":{"column":93,"line":49},"start":{"column":49,"line":49}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"79","location":{"end":{"column":92,"line":49},"start":{"column":72,"line":49}},"mutatorName":"ArithmeticOperator","replacement":"rover.position.y + 1","status":"Killed"},{"id":"80","location":{"end":{"column":87,"line":51},"start":{"column":24,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"81","location":{"end":{"column":86,"line":51},"start":{"column":42,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"82","location":{"end":{"column":85,"line":51},"start":{"column":65,"line":51}},"mutatorName":"ArithmeticOperator","replacement":"rover.position.x + 1","status":"Killed"},{"id":"84","location":{"end":{"column":35,"line":55},"start":{"column":17,"line":55}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"83","location":{"end":{"column":35,"line":55},"start":{"column":17,"line":55}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"85","location":{"end":{"column":35,"line":55},"start":{"column":17,"line":55}},"mutatorName":"EqualityOperator","replacement":"instruction != 'B'","status":"Killed"},{"id":"86","location":{"end":{"column":35,"line":55},"start":{"column":32,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"87","location":{"end":{"column":14,"line":66},"start":{"column":37,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"88","location":{"end":{"column":40,"line":56},"start":{"column":21,"line":56}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"89","location":{"end":{"column":40,"line":56},"start":{"column":21,"line":56}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"90","location":{"end":{"column":40,"line":56},"start":{"column":21,"line":56}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'N'","status":"Killed"},{"id":"91","location":{"end":{"column":40,"line":56},"start":{"column":37,"line":56}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"92","location":{"end":{"column":94,"line":57},"start":{"column":28,"line":57}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"93","location":{"end":{"column":93,"line":57},"start":{"column":49,"line":57}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"95","location":{"end":{"column":40,"line":59},"start":{"column":21,"line":59}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"94","location":{"end":{"column":92,"line":57},"start":{"column":72,"line":57}},"mutatorName":"ArithmeticOperator","replacement":"rover.position.y + 1","status":"Killed"},{"id":"96","location":{"end":{"column":40,"line":59},"start":{"column":21,"line":59}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"97","location":{"end":{"column":40,"line":59},"start":{"column":21,"line":59}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'E'","status":"Killed"},{"id":"98","location":{"end":{"column":40,"line":59},"start":{"column":37,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"99","location":{"end":{"column":94,"line":60},"start":{"column":28,"line":60}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"101","location":{"end":{"column":92,"line":60},"start":{"column":72,"line":60}},"mutatorName":"ArithmeticOperator","replacement":"rover.position.x + 1","status":"Killed"},{"id":"100","location":{"end":{"column":93,"line":60},"start":{"column":49,"line":60}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"102","location":{"end":{"column":40,"line":62},"start":{"column":21,"line":62}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"103","location":{"end":{"column":40,"line":62},"start":{"column":21,"line":62}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"104","location":{"end":{"column":40,"line":62},"start":{"column":21,"line":62}},"mutatorName":"EqualityOperator","replacement":"rover.facing != 'S'","status":"Killed"},{"id":"105","location":{"end":{"column":40,"line":62},"start":{"column":37,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"106","location":{"end":{"column":94,"line":63},"start":{"column":28,"line":63}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"107","location":{"end":{"column":93,"line":63},"start":{"column":49,"line":63}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"108","location":{"end":{"column":92,"line":63},"start":{"column":72,"line":63}},"mutatorName":"ArithmeticOperator","replacement":"rover.position.y - 1","status":"Killed"},{"id":"109","location":{"end":{"column":87,"line":65},"start":{"column":24,"line":65}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"110","location":{"end":{"column":86,"line":65},"start":{"column":42,"line":65}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"111","location":{"end":{"column":85,"line":65},"start":{"column":65,"line":65}},"mutatorName":"ArithmeticOperator","replacement":"rover.position.x - 1","status":"Killed"}],"source":"class Rover {\r\n\r\n    position;\r\n    facing;\r\n\r\n    constructor(x, y, facing){\r\n        this.position = {x: x, y: y};\r\n        this.facing = facing;\r\n    }\r\n\r\n    go(instructions) {\r\n\r\n        return Array.from(instructions).reduce((rover, instruction) => {\r\n            if (instruction == 'R') {\r\n                if (rover.facing == 'N')\r\n                    return {...rover, facing: \"E\"};\r\n\r\n                if (rover.facing == 'E')\r\n                    return {...rover, facing: 'S'};\r\n\r\n                if (rover.facing == 'S')\r\n                    return {...rover, facing: 'W'};\r\n\r\n                return {...rover, facing: 'N'};\r\n            }\r\n            ;\r\n\r\n            if (instruction == 'L') {\r\n                if (rover.facing == 'N')\r\n                    return {...rover, facing: \"W\"};\r\n\r\n                if (rover.facing == 'W')\r\n                    return {...rover, facing: 'S'};\r\n\r\n                if (rover.facing == 'S')\r\n                    return {...rover, facing: 'E'};\r\n\r\n                return {...rover, facing: 'N'};\r\n            }\r\n\r\n            if (instruction == 'F') {\r\n                if (rover.facing == 'N')\r\n                    return {...rover, position: {...rover.position, y: rover.position.y + 1}};\r\n\r\n                if (rover.facing == 'E')\r\n                    return {...rover, position: {...rover.position, x: rover.position.x + 1}};\r\n\r\n                if (rover.facing == 'S')\r\n                    return {...rover, position: {...rover.position, y: rover.position.y - 1}};\r\n\r\n                return {rover, position: {...rover.position, x: rover.position.x - 1}};\r\n            }\r\n            ;\r\n\r\n            if (instruction == 'B') {\r\n                if (rover.facing == 'N')\r\n                    return {...rover, position: {...rover.position, y: rover.position.y - 1}};\r\n\r\n                if (rover.facing == 'E')\r\n                    return {...rover, position: {...rover.position, x: rover.position.x - 1}};\r\n\r\n                if (rover.facing == 'S')\r\n                    return {...rover, position: {...rover.position, y: rover.position.y + 1}};\r\n\r\n                return {rover, position: {...rover.position, x: rover.position.x + 1}};\r\n            }\r\n\r\n            return rover;\r\n\r\n        }, this);\r\n    }\r\n}\r\n\r\nmodule.exports = Rover;"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};